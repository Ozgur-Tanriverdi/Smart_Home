|TopLevelModule
Clk => UART_tx:UART_Transmitter.Clk
Clk => echo_pulse_in.CLK
Clk => echo_pulse_t2.CLK
Clk => echo_pulse_t1.CLK
Clk => reset_n_in.CLK
Clk => reset_n_t1.CLK
Clk => selection.CLK
Clk => duty[0].CLK
Clk => duty[1].CLK
Clk => duty[2].CLK
Clk => duty[3].CLK
Clk => duty[4].CLK
Clk => duty[5].CLK
Clk => duty[6].CLK
Clk => duty[7].CLK
Clk => TxStart.CLK
Clk => SMVariable.CLK
Clk => dht_start.CLK
Clk => count[0].CLK
Clk => count[1].CLK
Clk => count[2].CLK
Clk => count[3].CLK
Clk => count[4].CLK
Clk => count[5].CLK
Clk => count[6].CLK
Clk => count[7].CLK
Clk => count[8].CLK
Clk => count[9].CLK
Clk => count[10].CLK
Clk => count[11].CLK
Clk => count[12].CLK
Clk => count[13].CLK
Clk => count[14].CLK
Clk => count[15].CLK
Clk => count[16].CLK
Clk => count[17].CLK
Clk => count[18].CLK
Clk => count[19].CLK
Clk => count[20].CLK
Clk => count[21].CLK
Clk => count[22].CLK
Clk => count[23].CLK
Clk => count[24].CLK
Clk => count[25].CLK
Clk => count[26].CLK
Clk => UART_rx:UART_Receiver.Clk
Clk => pwm:inst_pwm.clk
Clk => dht_sensor:sensor.clk
Clk => HCSR04_sensor_interface:inst_HCSR04_sensor_interface.i_Clock
Clk => seven_seg_dispayer:inst_seven_seg_dispayer.i_Clock
Clk => buzzer:inst_buzzer.clk_50
Rst => UART_tx:UART_Transmitter.Rst
Rst => duty[0].ACLR
Rst => duty[1].ACLR
Rst => duty[2].ACLR
Rst => duty[3].ACLR
Rst => duty[4].ACLR
Rst => duty[5].ACLR
Rst => duty[6].ACLR
Rst => duty[7].ACLR
Rst => TxStart.ACLR
Rst => SMVariable.ACLR
Rst => dht_start.ACLR
Rst => count[0].ACLR
Rst => count[1].ACLR
Rst => count[2].ACLR
Rst => count[3].ACLR
Rst => count[4].ACLR
Rst => count[5].ACLR
Rst => count[6].ACLR
Rst => count[7].ACLR
Rst => count[8].ACLR
Rst => count[9].ACLR
Rst => count[10].ACLR
Rst => count[11].ACLR
Rst => count[12].ACLR
Rst => count[13].ACLR
Rst => count[14].ACLR
Rst => count[15].ACLR
Rst => count[16].ACLR
Rst => count[17].ACLR
Rst => count[18].ACLR
Rst => count[19].ACLR
Rst => count[20].ACLR
Rst => count[21].ACLR
Rst => count[22].ACLR
Rst => count[23].ACLR
Rst => count[24].ACLR
Rst => count[25].ACLR
Rst => count[26].ACLR
Rst => UART_rx:UART_Receiver.Rst
Rst => dht_sensor:sensor.rst
Rst => buzzer:inst_buzzer.reset
Rst => reset_n_in.ACLR
Rst => reset_n_t1.ACLR
Rst => pwm:inst_pwm.reset_n
Rst => selection.ENA
rs232_rx_pin => UART_rx:UART_Receiver.RS232_Rx
rs232_tx_pin <= UART_tx:UART_Transmitter.UART_tx_pin
enable => pwm:inst_pwm.ena
pwm_out[0] <= pwm:inst_pwm.pwm_out[0]
pwm_n_out[0] <= pwm:inst_pwm.pwm_n_out[0]
sensor_reading_async => dht_sensor:sensor.sensor_reading_async
sensor_writing <> dht_sensor:sensor.sensor_writing
seven_segment1[0] <= seven_seg:measured_temp_hex.seven_segment1[0]
seven_segment1[1] <= seven_seg:measured_temp_hex.seven_segment1[1]
seven_segment1[2] <= seven_seg:measured_temp_hex.seven_segment1[2]
seven_segment1[3] <= seven_seg:measured_temp_hex.seven_segment1[3]
seven_segment1[4] <= seven_seg:measured_temp_hex.seven_segment1[4]
seven_segment1[5] <= seven_seg:measured_temp_hex.seven_segment1[5]
seven_segment1[6] <= seven_seg:measured_temp_hex.seven_segment1[6]
seven_segment2[0] <= seven_seg:measured_temp_hex.seven_segment2[0]
seven_segment2[1] <= seven_seg:measured_temp_hex.seven_segment2[1]
seven_segment2[2] <= seven_seg:measured_temp_hex.seven_segment2[2]
seven_segment2[3] <= seven_seg:measured_temp_hex.seven_segment2[3]
seven_segment2[4] <= seven_seg:measured_temp_hex.seven_segment2[4]
seven_segment2[5] <= seven_seg:measured_temp_hex.seven_segment2[5]
seven_segment2[6] <= seven_seg:measured_temp_hex.seven_segment2[6]
i_Echo => echo_pulse_t1.DATAIN
o_Trigger <= HCSR04_sensor_interface:inst_HCSR04_sensor_interface.o_Trigger
o_Sev_seg_1[0] <= seven_seg_dispayer:inst_seven_seg_dispayer.o_Sev_seg_1[0]
o_Sev_seg_1[1] <= seven_seg_dispayer:inst_seven_seg_dispayer.o_Sev_seg_1[1]
o_Sev_seg_1[2] <= seven_seg_dispayer:inst_seven_seg_dispayer.o_Sev_seg_1[2]
o_Sev_seg_1[3] <= seven_seg_dispayer:inst_seven_seg_dispayer.o_Sev_seg_1[3]
o_Sev_seg_1[4] <= seven_seg_dispayer:inst_seven_seg_dispayer.o_Sev_seg_1[4]
o_Sev_seg_1[5] <= seven_seg_dispayer:inst_seven_seg_dispayer.o_Sev_seg_1[5]
o_Sev_seg_1[6] <= seven_seg_dispayer:inst_seven_seg_dispayer.o_Sev_seg_1[6]
o_Sev_seg_2[0] <= seven_seg_dispayer:inst_seven_seg_dispayer.o_Sev_seg_2[0]
o_Sev_seg_2[1] <= seven_seg_dispayer:inst_seven_seg_dispayer.o_Sev_seg_2[1]
o_Sev_seg_2[2] <= seven_seg_dispayer:inst_seven_seg_dispayer.o_Sev_seg_2[2]
o_Sev_seg_2[3] <= seven_seg_dispayer:inst_seven_seg_dispayer.o_Sev_seg_2[3]
o_Sev_seg_2[4] <= seven_seg_dispayer:inst_seven_seg_dispayer.o_Sev_seg_2[4]
o_Sev_seg_2[5] <= seven_seg_dispayer:inst_seven_seg_dispayer.o_Sev_seg_2[5]
o_Sev_seg_2[6] <= seven_seg_dispayer:inst_seven_seg_dispayer.o_Sev_seg_2[6]
o_Sev_seg_3[0] <= seven_seg_dispayer:inst_seven_seg_dispayer.o_Sev_seg_3[0]
o_Sev_seg_3[1] <= seven_seg_dispayer:inst_seven_seg_dispayer.o_Sev_seg_3[1]
o_Sev_seg_3[2] <= seven_seg_dispayer:inst_seven_seg_dispayer.o_Sev_seg_3[2]
o_Sev_seg_3[3] <= seven_seg_dispayer:inst_seven_seg_dispayer.o_Sev_seg_3[3]
o_Sev_seg_3[4] <= seven_seg_dispayer:inst_seven_seg_dispayer.o_Sev_seg_3[4]
o_Sev_seg_3[5] <= seven_seg_dispayer:inst_seven_seg_dispayer.o_Sev_seg_3[5]
o_Sev_seg_3[6] <= seven_seg_dispayer:inst_seven_seg_dispayer.o_Sev_seg_3[6]
LED <= seven_seg_dispayer:inst_seven_seg_dispayer.LED1
hilo => buzzer:inst_buzzer.hilo
input => ~NO_FANOUT~
waveform <= buzzer:inst_buzzer.waveform


|TopLevelModule|UART_tx:UART_Transmitter
Clk => Serialiser:UART_SERIALISER_INST.Clk
Clk => BaudClkGenerator:UART_BIT_TIMING_INST.Clk
Rst => Serialiser:UART_SERIALISER_INST.Rst
Rst => BaudClkGenerator:UART_BIT_TIMING_INST.Rst
TxStart => Serialiser:UART_SERIALISER_INST.Load
TxStart => BaudClkGenerator:UART_BIT_TIMING_INST.Start
TxData[0] => Serialiser:UART_SERIALISER_INST.Din[1]
TxData[1] => Serialiser:UART_SERIALISER_INST.Din[2]
TxData[2] => Serialiser:UART_SERIALISER_INST.Din[3]
TxData[3] => Serialiser:UART_SERIALISER_INST.Din[4]
TxData[4] => Serialiser:UART_SERIALISER_INST.Din[5]
TxData[5] => Serialiser:UART_SERIALISER_INST.Din[6]
TxData[6] => Serialiser:UART_SERIALISER_INST.Din[7]
TxData[7] => Serialiser:UART_SERIALISER_INST.Din[8]
TxReady <= BaudClkGenerator:UART_BIT_TIMING_INST.Ready
UART_tx_pin <= Serialiser:UART_SERIALISER_INST.Dout


|TopLevelModule|UART_tx:UART_Transmitter|Serialiser:UART_SERIALISER_INST
Clk => ShiftRegister[0].CLK
Clk => ShiftRegister[1].CLK
Clk => ShiftRegister[2].CLK
Clk => ShiftRegister[3].CLK
Clk => ShiftRegister[4].CLK
Clk => ShiftRegister[5].CLK
Clk => ShiftRegister[6].CLK
Clk => ShiftRegister[7].CLK
Clk => ShiftRegister[8].CLK
Clk => ShiftRegister[9].CLK
Rst => ShiftRegister[0].PRESET
Rst => ShiftRegister[1].PRESET
Rst => ShiftRegister[2].PRESET
Rst => ShiftRegister[3].PRESET
Rst => ShiftRegister[4].PRESET
Rst => ShiftRegister[5].PRESET
Rst => ShiftRegister[6].PRESET
Rst => ShiftRegister[7].PRESET
Rst => ShiftRegister[8].PRESET
Rst => ShiftRegister[9].PRESET
ShiftEn => ShiftRegister.OUTPUTSELECT
ShiftEn => ShiftRegister.OUTPUTSELECT
ShiftEn => ShiftRegister.OUTPUTSELECT
ShiftEn => ShiftRegister.OUTPUTSELECT
ShiftEn => ShiftRegister.OUTPUTSELECT
ShiftEn => ShiftRegister.OUTPUTSELECT
ShiftEn => ShiftRegister.OUTPUTSELECT
ShiftEn => ShiftRegister.OUTPUTSELECT
ShiftEn => ShiftRegister.OUTPUTSELECT
ShiftEn => ShiftRegister.OUTPUTSELECT
Load => ShiftRegister.OUTPUTSELECT
Load => ShiftRegister.OUTPUTSELECT
Load => ShiftRegister.OUTPUTSELECT
Load => ShiftRegister.OUTPUTSELECT
Load => ShiftRegister.OUTPUTSELECT
Load => ShiftRegister.OUTPUTSELECT
Load => ShiftRegister.OUTPUTSELECT
Load => ShiftRegister.OUTPUTSELECT
Load => ShiftRegister.OUTPUTSELECT
Load => ShiftRegister.OUTPUTSELECT
Din[0] => ShiftRegister.DATAB
Din[1] => ShiftRegister.DATAB
Din[2] => ShiftRegister.DATAB
Din[3] => ShiftRegister.DATAB
Din[4] => ShiftRegister.DATAB
Din[5] => ShiftRegister.DATAB
Din[6] => ShiftRegister.DATAB
Din[7] => ShiftRegister.DATAB
Din[8] => ShiftRegister.DATAB
Din[9] => ShiftRegister.DATAB
Dout <= ShiftRegister[0].DB_MAX_OUTPUT_PORT_TYPE


|TopLevelModule|UART_tx:UART_Transmitter|BaudClkGenerator:UART_BIT_TIMING_INST
Clk => Ready~reg0.CLK
Clk => ClocksLeft[0].CLK
Clk => ClocksLeft[1].CLK
Clk => ClocksLeft[2].CLK
Clk => ClocksLeft[3].CLK
Clk => BitPeriodCounter[0].CLK
Clk => BitPeriodCounter[1].CLK
Clk => BitPeriodCounter[2].CLK
Clk => BitPeriodCounter[3].CLK
Clk => BitPeriodCounter[4].CLK
Clk => BitPeriodCounter[5].CLK
Clk => BitPeriodCounter[6].CLK
Clk => BitPeriodCounter[7].CLK
Clk => BitPeriodCounter[8].CLK
Clk => BitPeriodCounter[9].CLK
Clk => BitPeriodCounter[10].CLK
Clk => BitPeriodCounter[11].CLK
Clk => BitPeriodCounter[12].CLK
Clk => BaudClk~reg0.CLK
Rst => Ready~reg0.PRESET
Rst => ClocksLeft[0].ACLR
Rst => ClocksLeft[1].ACLR
Rst => ClocksLeft[2].ACLR
Rst => ClocksLeft[3].ACLR
Rst => BitPeriodCounter[0].ACLR
Rst => BitPeriodCounter[1].ACLR
Rst => BitPeriodCounter[2].ACLR
Rst => BitPeriodCounter[3].ACLR
Rst => BitPeriodCounter[4].ACLR
Rst => BitPeriodCounter[5].ACLR
Rst => BitPeriodCounter[6].ACLR
Rst => BitPeriodCounter[7].ACLR
Rst => BitPeriodCounter[8].ACLR
Rst => BitPeriodCounter[9].ACLR
Rst => BitPeriodCounter[10].ACLR
Rst => BitPeriodCounter[11].ACLR
Rst => BitPeriodCounter[12].ACLR
Rst => BaudClk~reg0.ACLR
Start => ClocksLeft.OUTPUTSELECT
Start => ClocksLeft.OUTPUTSELECT
Start => ClocksLeft.OUTPUTSELECT
Start => ClocksLeft.OUTPUTSELECT
Start => Ready.OUTPUTSELECT
BaudClk <= BaudClk~reg0.DB_MAX_OUTPUT_PORT_TYPE
Ready <= Ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|TopLevelModule|UART_rx:UART_Receiver
Clk => Sync:Sync_Rx.Clk
Clk => RxIRQ~reg0.CLK
Clk => Start.CLK
Clk => RS232_Rx_Synced_Delay.CLK
Clk => FallingEdge.CLK
Clk => BaudClkGenerator:BaudClkGenerator_Rx.Clk
Clk => ShiftRegister:ShiftRegister_Rx.Clk
Clk => SMStateVariable~4.DATAIN
Rst => Sync:Sync_Rx.Rst
Rst => RxIRQ~reg0.ACLR
Rst => Start.ACLR
Rst => RS232_Rx_Synced_Delay.PRESET
Rst => FallingEdge.ACLR
Rst => BaudClkGenerator:BaudClkGenerator_Rx.Rst
Rst => ShiftRegister:ShiftRegister_Rx.Rst
Rst => SMStateVariable~6.DATAIN
RS232_Rx => Sync:Sync_Rx.Async
RxIRQClear => RxIRQ.OUTPUTSELECT
RxIRQ <= RxIRQ~reg0.DB_MAX_OUTPUT_PORT_TYPE
RxData[0] <= ShiftRegister:ShiftRegister_Rx.Dout[0]
RxData[1] <= ShiftRegister:ShiftRegister_Rx.Dout[1]
RxData[2] <= ShiftRegister:ShiftRegister_Rx.Dout[2]
RxData[3] <= ShiftRegister:ShiftRegister_Rx.Dout[3]
RxData[4] <= ShiftRegister:ShiftRegister_Rx.Dout[4]
RxData[5] <= ShiftRegister:ShiftRegister_Rx.Dout[5]
RxData[6] <= ShiftRegister:ShiftRegister_Rx.Dout[6]
RxData[7] <= ShiftRegister:ShiftRegister_Rx.Dout[7]


|TopLevelModule|UART_rx:UART_Receiver|Sync:Sync_Rx
Clk => SR[0].CLK
Clk => SR[1].CLK
Rst => SR[0].PRESET
Rst => SR[1].PRESET
Async => SR[0].DATAIN
Synced <= SR[1].DB_MAX_OUTPUT_PORT_TYPE


|TopLevelModule|UART_rx:UART_Receiver|BaudClkGenerator:BaudClkGenerator_Rx
Clk => Ready~reg0.CLK
Clk => ClocksLeft[0].CLK
Clk => ClocksLeft[1].CLK
Clk => ClocksLeft[2].CLK
Clk => ClocksLeft[3].CLK
Clk => BitPeriodCounter[0].CLK
Clk => BitPeriodCounter[1].CLK
Clk => BitPeriodCounter[2].CLK
Clk => BitPeriodCounter[3].CLK
Clk => BitPeriodCounter[4].CLK
Clk => BitPeriodCounter[5].CLK
Clk => BitPeriodCounter[6].CLK
Clk => BitPeriodCounter[7].CLK
Clk => BitPeriodCounter[8].CLK
Clk => BitPeriodCounter[9].CLK
Clk => BitPeriodCounter[10].CLK
Clk => BitPeriodCounter[11].CLK
Clk => BitPeriodCounter[12].CLK
Clk => BaudClk~reg0.CLK
Rst => Ready~reg0.PRESET
Rst => ClocksLeft[0].ACLR
Rst => ClocksLeft[1].ACLR
Rst => ClocksLeft[2].ACLR
Rst => ClocksLeft[3].ACLR
Rst => BitPeriodCounter[0].ACLR
Rst => BitPeriodCounter[1].ACLR
Rst => BitPeriodCounter[2].ACLR
Rst => BitPeriodCounter[3].ACLR
Rst => BitPeriodCounter[4].ACLR
Rst => BitPeriodCounter[5].ACLR
Rst => BitPeriodCounter[6].ACLR
Rst => BitPeriodCounter[7].ACLR
Rst => BitPeriodCounter[8].ACLR
Rst => BitPeriodCounter[9].ACLR
Rst => BitPeriodCounter[10].ACLR
Rst => BitPeriodCounter[11].ACLR
Rst => BitPeriodCounter[12].ACLR
Rst => BaudClk~reg0.ACLR
Start => ClocksLeft.OUTPUTSELECT
Start => ClocksLeft.OUTPUTSELECT
Start => ClocksLeft.OUTPUTSELECT
Start => ClocksLeft.OUTPUTSELECT
Start => Ready.OUTPUTSELECT
BaudClk <= BaudClk~reg0.DB_MAX_OUTPUT_PORT_TYPE
Ready <= Ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|TopLevelModule|UART_rx:UART_Receiver|ShiftRegister:ShiftRegister_Rx
Clk => SR[0].CLK
Clk => SR[1].CLK
Clk => SR[2].CLK
Clk => SR[3].CLK
Clk => SR[4].CLK
Clk => SR[5].CLK
Clk => SR[6].CLK
Clk => SR[7].CLK
Rst => SR[0].ACLR
Rst => SR[1].ACLR
Rst => SR[2].ACLR
Rst => SR[3].ACLR
Rst => SR[4].ACLR
Rst => SR[5].ACLR
Rst => SR[6].ACLR
Rst => SR[7].ACLR
ShiftEn => SR[7].ENA
ShiftEn => SR[6].ENA
ShiftEn => SR[5].ENA
ShiftEn => SR[4].ENA
ShiftEn => SR[3].ENA
ShiftEn => SR[2].ENA
ShiftEn => SR[1].ENA
ShiftEn => SR[0].ENA
Din => SR[7].DATAIN
Dout[0] <= SR[0].DB_MAX_OUTPUT_PORT_TYPE
Dout[1] <= SR[1].DB_MAX_OUTPUT_PORT_TYPE
Dout[2] <= SR[2].DB_MAX_OUTPUT_PORT_TYPE
Dout[3] <= SR[3].DB_MAX_OUTPUT_PORT_TYPE
Dout[4] <= SR[4].DB_MAX_OUTPUT_PORT_TYPE
Dout[5] <= SR[5].DB_MAX_OUTPUT_PORT_TYPE
Dout[6] <= SR[6].DB_MAX_OUTPUT_PORT_TYPE
Dout[7] <= SR[7].DB_MAX_OUTPUT_PORT_TYPE


|TopLevelModule|pwm:inst_pwm
clk => half_duty[0][0].CLK
clk => half_duty[0][1].CLK
clk => half_duty[0][2].CLK
clk => half_duty[0][3].CLK
clk => half_duty[0][4].CLK
clk => half_duty[0][5].CLK
clk => half_duty[0][6].CLK
clk => half_duty[0][7].CLK
clk => half_duty_new[0].CLK
clk => half_duty_new[1].CLK
clk => half_duty_new[2].CLK
clk => half_duty_new[3].CLK
clk => half_duty_new[4].CLK
clk => half_duty_new[5].CLK
clk => half_duty_new[6].CLK
clk => half_duty_new[7].CLK
clk => pwm_n_out[0]~reg0.CLK
clk => pwm_out[0]~reg0.CLK
clk => count[0][0].CLK
clk => count[0][1].CLK
clk => count[0][2].CLK
clk => count[0][3].CLK
clk => count[0][4].CLK
clk => count[0][5].CLK
clk => count[0][6].CLK
clk => count[0][7].CLK
clk => count[0][8].CLK
reset_n => pwm_n_out[0]~reg0.ACLR
reset_n => pwm_out[0]~reg0.ACLR
reset_n => count[0][0].ACLR
reset_n => count[0][1].ACLR
reset_n => count[0][2].ACLR
reset_n => count[0][3].ACLR
reset_n => count[0][4].ACLR
reset_n => count[0][5].ACLR
reset_n => count[0][6].ACLR
reset_n => count[0][7].ACLR
reset_n => count[0][8].ACLR
reset_n => half_duty[0][0].ENA
reset_n => half_duty_new[7].ENA
reset_n => half_duty_new[6].ENA
reset_n => half_duty_new[5].ENA
reset_n => half_duty_new[4].ENA
reset_n => half_duty_new[3].ENA
reset_n => half_duty_new[2].ENA
reset_n => half_duty_new[1].ENA
reset_n => half_duty_new[0].ENA
reset_n => half_duty[0][7].ENA
reset_n => half_duty[0][6].ENA
reset_n => half_duty[0][5].ENA
reset_n => half_duty[0][4].ENA
reset_n => half_duty[0][3].ENA
reset_n => half_duty[0][2].ENA
reset_n => half_duty[0][1].ENA
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
ena => half_duty_new.OUTPUTSELECT
duty[0] => Mult0.IN16
duty[1] => Mult0.IN15
duty[2] => Mult0.IN14
duty[3] => Mult0.IN13
duty[4] => Mult0.IN12
duty[5] => Mult0.IN11
duty[6] => Mult0.IN10
duty[7] => Mult0.IN9
pwm_out[0] <= pwm_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pwm_n_out[0] <= pwm_n_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|TopLevelModule|dht_sensor:sensor
clk => sync_11:do_sync.Clk
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => bit_count[4].CLK
clk => bit_count[5].CLK
clk => bit_count[6].CLK
clk => data_flag~reg0.CLK
clk => data[17].CLK
clk => data[18].CLK
clk => data[19].CLK
clk => data[20].CLK
clk => data[21].CLK
clk => data[22].CLK
clk => data[23].CLK
clk => data[24].CLK
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => sensor_writing~reg0.CLK
clk => sensor_writing~en.CLK
clk => fallingedge_detector:falling.clk
clk => risingedge_detector:rising.clk
clk => risingedge_detector:rising_start.clk
clk => state~8.DATAIN
rst => sync_11:do_sync.Rst
rst => count[0].ACLR
rst => count[1].ACLR
rst => count[2].ACLR
rst => count[3].ACLR
rst => count[4].ACLR
rst => count[5].ACLR
rst => count[6].ACLR
rst => count[7].ACLR
rst => count[8].ACLR
rst => count[9].ACLR
rst => count[10].ACLR
rst => count[11].ACLR
rst => count[12].ACLR
rst => count[13].ACLR
rst => count[14].ACLR
rst => count[15].ACLR
rst => count[16].ACLR
rst => count[17].ACLR
rst => count[18].ACLR
rst => count[19].ACLR
rst => count[20].ACLR
rst => count[21].ACLR
rst => count[22].ACLR
rst => count[23].ACLR
rst => count[24].ACLR
rst => count[25].ACLR
rst => bit_count[0].ACLR
rst => bit_count[1].ACLR
rst => bit_count[2].ACLR
rst => bit_count[3].ACLR
rst => bit_count[4].ACLR
rst => bit_count[5].ACLR
rst => bit_count[6].ACLR
rst => data_flag~reg0.ACLR
rst => data[17].ACLR
rst => data[18].ACLR
rst => data[19].ACLR
rst => data[20].ACLR
rst => data[21].ACLR
rst => data[22].ACLR
rst => data[23].ACLR
rst => data[24].ACLR
rst => data_out[0]~reg0.ACLR
rst => data_out[1]~reg0.ACLR
rst => data_out[2]~reg0.ACLR
rst => data_out[3]~reg0.ACLR
rst => data_out[4]~reg0.ACLR
rst => data_out[5]~reg0.ACLR
rst => data_out[6]~reg0.ACLR
rst => data_out[7]~reg0.ACLR
rst => sensor_writing~en.ACLR
rst => fallingedge_detector:falling.rst
rst => risingedge_detector:rising.rst
rst => risingedge_detector:rising_start.rst
rst => state~10.DATAIN
start => risingedge_detector:rising_start.input
sensor_reading_async => sync_11:do_sync.Async
sensor_writing <> sensor_writing
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_flag <= data_flag~reg0.DB_MAX_OUTPUT_PORT_TYPE


|TopLevelModule|dht_sensor:sensor|sync_11:do_sync
Clk => Reg[0].CLK
Clk => Reg[1].CLK
Rst => Reg[0].PRESET
Rst => Reg[1].PRESET
Async => Reg[0].DATAIN
Synced <= Reg[1].DB_MAX_OUTPUT_PORT_TYPE


|TopLevelModule|dht_sensor:sensor|fallingedge_detector:falling
clk => input_delayed.CLK
clk => output~reg0.CLK
rst => output~reg0.ACLR
rst => input_delayed.ENA
input => process_0.IN1
input => input_delayed.DATAIN
output <= output~reg0.DB_MAX_OUTPUT_PORT_TYPE


|TopLevelModule|dht_sensor:sensor|risingedge_detector:rising
clk => input_delayed.CLK
clk => output~reg0.CLK
rst => output~reg0.ACLR
rst => input_delayed.ENA
input => process_0.IN1
input => input_delayed.DATAIN
output <= output~reg0.DB_MAX_OUTPUT_PORT_TYPE


|TopLevelModule|dht_sensor:sensor|risingedge_detector:rising_start
clk => input_delayed.CLK
clk => output~reg0.CLK
rst => output~reg0.ACLR
rst => input_delayed.ENA
input => process_0.IN1
input => input_delayed.DATAIN
output <= output~reg0.DB_MAX_OUTPUT_PORT_TYPE


|TopLevelModule|seven_seg:measured_temp_hex
input[0] => Mux7.IN19
input[0] => Mux8.IN19
input[0] => Mux9.IN19
input[0] => Mux10.IN19
input[0] => Mux11.IN19
input[0] => Mux12.IN19
input[0] => Mux13.IN19
input[1] => Mux7.IN18
input[1] => Mux8.IN18
input[1] => Mux9.IN18
input[1] => Mux10.IN18
input[1] => Mux11.IN18
input[1] => Mux12.IN18
input[1] => Mux13.IN18
input[2] => Mux7.IN17
input[2] => Mux8.IN17
input[2] => Mux9.IN17
input[2] => Mux10.IN17
input[2] => Mux11.IN17
input[2] => Mux12.IN17
input[2] => Mux13.IN17
input[3] => Mux7.IN16
input[3] => Mux8.IN16
input[3] => Mux9.IN16
input[3] => Mux10.IN16
input[3] => Mux11.IN16
input[3] => Mux12.IN16
input[3] => Mux13.IN16
input[4] => Mux0.IN19
input[4] => Mux1.IN19
input[4] => Mux2.IN19
input[4] => Mux3.IN19
input[4] => Mux4.IN19
input[4] => Mux5.IN19
input[4] => Mux6.IN19
input[5] => Mux0.IN18
input[5] => Mux1.IN18
input[5] => Mux2.IN18
input[5] => Mux3.IN18
input[5] => Mux4.IN18
input[5] => Mux5.IN18
input[5] => Mux6.IN18
input[6] => Mux0.IN17
input[6] => Mux1.IN17
input[6] => Mux2.IN17
input[6] => Mux3.IN17
input[6] => Mux4.IN17
input[6] => Mux5.IN17
input[6] => Mux6.IN17
input[7] => Mux0.IN16
input[7] => Mux1.IN16
input[7] => Mux2.IN16
input[7] => Mux3.IN16
input[7] => Mux4.IN16
input[7] => Mux5.IN16
input[7] => Mux6.IN16
seven_segment1[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
seven_segment1[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
seven_segment1[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
seven_segment1[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
seven_segment1[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
seven_segment1[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
seven_segment1[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
seven_segment2[0] <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
seven_segment2[1] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
seven_segment2[2] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
seven_segment2[3] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
seven_segment2[4] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
seven_segment2[5] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
seven_segment2[6] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE


|TopLevelModule|HCSR04_sensor_interface:inst_HCSR04_sensor_interface
i_Clock => counter:inst_counter.i_Clock
i_Clock => trigger_generator:inst_trigger_generator.i_Clock
i_Clock => measurement_cal:inst_measurement_cal.i_Clock
i_Clock => binary_to_bcd:inst_binary_to_bcd.i_Clock
i_Reset_n => counter:inst_counter.i_Reset_n
i_Reset_n => trigger_generator:inst_trigger_generator.i_Reset_n
i_Reset_n => measurement_cal:inst_measurement_cal.i_Reset_n
i_Reset_n => binary_to_bcd:inst_binary_to_bcd.i_Reset_n
i_Echo => counter:inst_counter.i_Echo
o_Trigger <= trigger_generator:inst_trigger_generator.o_Trigger
o_Sen_interface_Ones[0] <= binary_to_bcd:inst_binary_to_bcd.o_Ones[0]
o_Sen_interface_Ones[1] <= binary_to_bcd:inst_binary_to_bcd.o_Ones[1]
o_Sen_interface_Ones[2] <= binary_to_bcd:inst_binary_to_bcd.o_Ones[2]
o_Sen_interface_Ones[3] <= binary_to_bcd:inst_binary_to_bcd.o_Ones[3]
o_Sen_interface_Tens[0] <= binary_to_bcd:inst_binary_to_bcd.o_Tens[0]
o_Sen_interface_Tens[1] <= binary_to_bcd:inst_binary_to_bcd.o_Tens[1]
o_Sen_interface_Tens[2] <= binary_to_bcd:inst_binary_to_bcd.o_Tens[2]
o_Sen_interface_Tens[3] <= binary_to_bcd:inst_binary_to_bcd.o_Tens[3]
o_Sen_interface_Hundreds[0] <= binary_to_bcd:inst_binary_to_bcd.o_Hundreds[0]
o_Sen_interface_Hundreds[1] <= binary_to_bcd:inst_binary_to_bcd.o_Hundreds[1]
o_Sen_interface_Hundreds[2] <= binary_to_bcd:inst_binary_to_bcd.o_Hundreds[2]
o_Sen_interface_Hundreds[3] <= binary_to_bcd:inst_binary_to_bcd.o_Hundreds[3]
o_DV_n <= binary_to_bcd:inst_binary_to_bcd.o_DV_n


|TopLevelModule|HCSR04_sensor_interface:inst_HCSR04_sensor_interface|counter:inst_counter
i_Clock => o_DV_n~reg0.CLK
i_Clock => echo_pulse_counter[0].CLK
i_Clock => echo_pulse_counter[1].CLK
i_Clock => echo_pulse_counter[2].CLK
i_Clock => echo_pulse_counter[3].CLK
i_Clock => echo_pulse_counter[4].CLK
i_Clock => echo_pulse_counter[5].CLK
i_Clock => echo_pulse_counter[6].CLK
i_Clock => echo_pulse_counter[7].CLK
i_Clock => echo_pulse_counter[8].CLK
i_Clock => echo_pulse_counter[9].CLK
i_Clock => echo_pulse_counter[10].CLK
i_Clock => echo_pulse_counter[11].CLK
i_Clock => echo_pulse_counter[12].CLK
i_Clock => echo_pulse_counter[13].CLK
i_Clock => echo_pulse_counter[14].CLK
i_Clock => echo_pulse_counter[15].CLK
i_Clock => echo_pulse_counter[16].CLK
i_Clock => echo_pulse_counter[17].CLK
i_Clock => echo_pulse_counter[18].CLK
i_Clock => echo_pulse_counter[19].CLK
i_Clock => echo_pulse_counter[20].CLK
i_Clock => echo_pulse_counter[21].CLK
i_Clock => echo_pulse_counter[22].CLK
i_Clock => echo_pulse_counter[23].CLK
i_Clock => o_Echo_pulse_time[0]~reg0.CLK
i_Clock => o_Echo_pulse_time[1]~reg0.CLK
i_Clock => o_Echo_pulse_time[2]~reg0.CLK
i_Clock => o_Echo_pulse_time[3]~reg0.CLK
i_Clock => o_Echo_pulse_time[4]~reg0.CLK
i_Clock => o_Echo_pulse_time[5]~reg0.CLK
i_Clock => o_Echo_pulse_time[6]~reg0.CLK
i_Clock => o_Echo_pulse_time[7]~reg0.CLK
i_Clock => o_Echo_pulse_time[8]~reg0.CLK
i_Clock => o_Echo_pulse_time[9]~reg0.CLK
i_Clock => o_Echo_pulse_time[10]~reg0.CLK
i_Clock => o_Echo_pulse_time[11]~reg0.CLK
i_Clock => o_Echo_pulse_time[12]~reg0.CLK
i_Clock => o_Echo_pulse_time[13]~reg0.CLK
i_Clock => o_Echo_pulse_time[14]~reg0.CLK
i_Clock => o_Echo_pulse_time[15]~reg0.CLK
i_Clock => o_Echo_pulse_time[16]~reg0.CLK
i_Clock => o_Echo_pulse_time[17]~reg0.CLK
i_Clock => o_Echo_pulse_time[18]~reg0.CLK
i_Clock => o_Echo_pulse_time[19]~reg0.CLK
i_Clock => o_Echo_pulse_time[20]~reg0.CLK
i_Clock => o_Echo_pulse_time[21]~reg0.CLK
i_Clock => o_Echo_pulse_time[22]~reg0.CLK
i_Clock => o_Echo_pulse_time[23]~reg0.CLK
i_Clock => state~1.DATAIN
i_Reset_n => o_DV_n~reg0.PRESET
i_Reset_n => echo_pulse_counter[0].ACLR
i_Reset_n => echo_pulse_counter[1].ACLR
i_Reset_n => echo_pulse_counter[2].ACLR
i_Reset_n => echo_pulse_counter[3].ACLR
i_Reset_n => echo_pulse_counter[4].ACLR
i_Reset_n => echo_pulse_counter[5].ACLR
i_Reset_n => echo_pulse_counter[6].ACLR
i_Reset_n => echo_pulse_counter[7].ACLR
i_Reset_n => echo_pulse_counter[8].ACLR
i_Reset_n => echo_pulse_counter[9].ACLR
i_Reset_n => echo_pulse_counter[10].ACLR
i_Reset_n => echo_pulse_counter[11].ACLR
i_Reset_n => echo_pulse_counter[12].ACLR
i_Reset_n => echo_pulse_counter[13].ACLR
i_Reset_n => echo_pulse_counter[14].ACLR
i_Reset_n => echo_pulse_counter[15].ACLR
i_Reset_n => echo_pulse_counter[16].ACLR
i_Reset_n => echo_pulse_counter[17].ACLR
i_Reset_n => echo_pulse_counter[18].ACLR
i_Reset_n => echo_pulse_counter[19].ACLR
i_Reset_n => echo_pulse_counter[20].ACLR
i_Reset_n => echo_pulse_counter[21].ACLR
i_Reset_n => echo_pulse_counter[22].ACLR
i_Reset_n => echo_pulse_counter[23].ACLR
i_Reset_n => o_Echo_pulse_time[0]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[1]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[2]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[3]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[4]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[5]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[6]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[7]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[8]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[9]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[10]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[11]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[12]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[13]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[14]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[15]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[16]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[17]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[18]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[19]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[20]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[21]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[22]~reg0.ACLR
i_Reset_n => o_Echo_pulse_time[23]~reg0.ACLR
i_Reset_n => state~3.DATAIN
i_Echo => state.counting.DATAIN
i_Echo => Selector25.IN1
i_Echo => state.DATAB
o_DV_n <= o_DV_n~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[0] <= o_Echo_pulse_time[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[1] <= o_Echo_pulse_time[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[2] <= o_Echo_pulse_time[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[3] <= o_Echo_pulse_time[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[4] <= o_Echo_pulse_time[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[5] <= o_Echo_pulse_time[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[6] <= o_Echo_pulse_time[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[7] <= o_Echo_pulse_time[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[8] <= o_Echo_pulse_time[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[9] <= o_Echo_pulse_time[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[10] <= o_Echo_pulse_time[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[11] <= o_Echo_pulse_time[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[12] <= o_Echo_pulse_time[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[13] <= o_Echo_pulse_time[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[14] <= o_Echo_pulse_time[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[15] <= o_Echo_pulse_time[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[16] <= o_Echo_pulse_time[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[17] <= o_Echo_pulse_time[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[18] <= o_Echo_pulse_time[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[19] <= o_Echo_pulse_time[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[20] <= o_Echo_pulse_time[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[21] <= o_Echo_pulse_time[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[22] <= o_Echo_pulse_time[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Echo_pulse_time[23] <= o_Echo_pulse_time[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|TopLevelModule|HCSR04_sensor_interface:inst_HCSR04_sensor_interface|trigger_generator:inst_trigger_generator
i_Clock => counter[0].CLK
i_Clock => counter[1].CLK
i_Clock => counter[2].CLK
i_Clock => counter[3].CLK
i_Clock => counter[4].CLK
i_Clock => counter[5].CLK
i_Clock => counter[6].CLK
i_Clock => counter[7].CLK
i_Clock => counter[8].CLK
i_Clock => counter[9].CLK
i_Clock => counter[10].CLK
i_Clock => counter[11].CLK
i_Clock => counter[12].CLK
i_Clock => counter[13].CLK
i_Clock => counter[14].CLK
i_Clock => counter[15].CLK
i_Clock => counter[16].CLK
i_Clock => counter[17].CLK
i_Clock => counter[18].CLK
i_Clock => counter[19].CLK
i_Clock => counter[20].CLK
i_Clock => counter[21].CLK
i_Clock => counter[22].CLK
i_Clock => counter[23].CLK
i_Reset_n => counter[0].ACLR
i_Reset_n => counter[1].ACLR
i_Reset_n => counter[2].ACLR
i_Reset_n => counter[3].ACLR
i_Reset_n => counter[4].ACLR
i_Reset_n => counter[5].ACLR
i_Reset_n => counter[6].ACLR
i_Reset_n => counter[7].ACLR
i_Reset_n => counter[8].ACLR
i_Reset_n => counter[9].ACLR
i_Reset_n => counter[10].ACLR
i_Reset_n => counter[11].ACLR
i_Reset_n => counter[12].ACLR
i_Reset_n => counter[13].ACLR
i_Reset_n => counter[14].ACLR
i_Reset_n => counter[15].ACLR
i_Reset_n => counter[16].ACLR
i_Reset_n => counter[17].ACLR
i_Reset_n => counter[18].ACLR
i_Reset_n => counter[19].ACLR
i_Reset_n => counter[20].ACLR
i_Reset_n => counter[21].ACLR
i_Reset_n => counter[22].ACLR
i_Reset_n => counter[23].ACLR
o_Trigger <= o_Trigger.DB_MAX_OUTPUT_PORT_TYPE


|TopLevelModule|HCSR04_sensor_interface:inst_HCSR04_sensor_interface|measurement_cal:inst_measurement_cal
i_Clock => state.CLK
i_Clock => result[0].CLK
i_Clock => result[1].CLK
i_Clock => result[2].CLK
i_Clock => result[3].CLK
i_Clock => result[4].CLK
i_Clock => result[5].CLK
i_Clock => result[6].CLK
i_Clock => result[7].CLK
i_Clock => result[8].CLK
i_Clock => result[9].CLK
i_Clock => result[10].CLK
i_Clock => result[11].CLK
i_Clock => result[12].CLK
i_Clock => result[13].CLK
i_Reset_n => state.ACLR
i_Reset_n => result[0].ACLR
i_Reset_n => result[1].ACLR
i_Reset_n => result[2].ACLR
i_Reset_n => result[3].ACLR
i_Reset_n => result[4].ACLR
i_Reset_n => result[5].ACLR
i_Reset_n => result[6].ACLR
i_Reset_n => result[7].ACLR
i_Reset_n => result[8].ACLR
i_Reset_n => result[9].ACLR
i_Reset_n => result[10].ACLR
i_Reset_n => result[11].ACLR
i_Reset_n => result[12].ACLR
i_Reset_n => result[13].ACLR
i_Echo_pulse_time[0] => Add0.IN48
i_Echo_pulse_time[0] => Mult0.IN58
i_Echo_pulse_time[1] => Add0.IN47
i_Echo_pulse_time[1] => Mult0.IN57
i_Echo_pulse_time[2] => Add0.IN45
i_Echo_pulse_time[2] => Add0.IN46
i_Echo_pulse_time[3] => Add0.IN43
i_Echo_pulse_time[3] => Add0.IN44
i_Echo_pulse_time[4] => Add0.IN41
i_Echo_pulse_time[4] => Add0.IN42
i_Echo_pulse_time[5] => Add0.IN39
i_Echo_pulse_time[5] => Add0.IN40
i_Echo_pulse_time[6] => Add0.IN37
i_Echo_pulse_time[6] => Add0.IN38
i_Echo_pulse_time[7] => Add0.IN35
i_Echo_pulse_time[7] => Add0.IN36
i_Echo_pulse_time[8] => Add0.IN33
i_Echo_pulse_time[8] => Add0.IN34
i_Echo_pulse_time[9] => Add0.IN31
i_Echo_pulse_time[9] => Add0.IN32
i_Echo_pulse_time[10] => Add0.IN29
i_Echo_pulse_time[10] => Add0.IN30
i_Echo_pulse_time[11] => Add0.IN27
i_Echo_pulse_time[11] => Add0.IN28
i_Echo_pulse_time[12] => Add0.IN25
i_Echo_pulse_time[12] => Add0.IN26
i_Echo_pulse_time[13] => Add0.IN23
i_Echo_pulse_time[13] => Add0.IN24
i_Echo_pulse_time[14] => Add0.IN21
i_Echo_pulse_time[14] => Add0.IN22
i_Echo_pulse_time[15] => Add0.IN19
i_Echo_pulse_time[15] => Add0.IN20
i_Echo_pulse_time[16] => Add0.IN17
i_Echo_pulse_time[16] => Add0.IN18
i_Echo_pulse_time[17] => Add0.IN15
i_Echo_pulse_time[17] => Add0.IN16
i_Echo_pulse_time[18] => Add0.IN13
i_Echo_pulse_time[18] => Add0.IN14
i_Echo_pulse_time[19] => Add0.IN11
i_Echo_pulse_time[19] => Add0.IN12
i_Echo_pulse_time[20] => Add0.IN9
i_Echo_pulse_time[20] => Add0.IN10
i_Echo_pulse_time[21] => Add0.IN7
i_Echo_pulse_time[21] => Add0.IN8
i_Echo_pulse_time[22] => Add0.IN5
i_Echo_pulse_time[22] => Add0.IN6
i_Echo_pulse_time[23] => Add0.IN3
i_Echo_pulse_time[23] => Add0.IN4
i_DV_n => state.DATAB
o_Distance[0] <= result[0].DB_MAX_OUTPUT_PORT_TYPE
o_Distance[1] <= result[1].DB_MAX_OUTPUT_PORT_TYPE
o_Distance[2] <= result[2].DB_MAX_OUTPUT_PORT_TYPE
o_Distance[3] <= result[3].DB_MAX_OUTPUT_PORT_TYPE
o_Distance[4] <= result[4].DB_MAX_OUTPUT_PORT_TYPE
o_Distance[5] <= result[5].DB_MAX_OUTPUT_PORT_TYPE
o_Distance[6] <= result[6].DB_MAX_OUTPUT_PORT_TYPE
o_Distance[7] <= result[7].DB_MAX_OUTPUT_PORT_TYPE
o_Distance[8] <= result[8].DB_MAX_OUTPUT_PORT_TYPE
o_Distance[9] <= result[9].DB_MAX_OUTPUT_PORT_TYPE
o_Distance[10] <= result[10].DB_MAX_OUTPUT_PORT_TYPE
o_Distance[11] <= result[11].DB_MAX_OUTPUT_PORT_TYPE
o_Distance[12] <= result[12].DB_MAX_OUTPUT_PORT_TYPE
o_Distance[13] <= result[13].DB_MAX_OUTPUT_PORT_TYPE
o_DV_n <= state.DB_MAX_OUTPUT_PORT_TYPE


|TopLevelModule|HCSR04_sensor_interface:inst_HCSR04_sensor_interface|binary_to_bcd:inst_binary_to_bcd
i_Clock => bcd_signal[0].CLK
i_Clock => bcd_signal[1].CLK
i_Clock => bcd_signal[2].CLK
i_Clock => bcd_signal[3].CLK
i_Clock => bcd_signal[4].CLK
i_Clock => bcd_signal[5].CLK
i_Clock => bcd_signal[6].CLK
i_Clock => bcd_signal[7].CLK
i_Clock => bcd_signal[8].CLK
i_Clock => bcd_signal[9].CLK
i_Clock => bcd_signal[10].CLK
i_Clock => bcd_signal[11].CLK
i_Clock => \double_dabble:bcd[0].CLK
i_Clock => \double_dabble:bcd[1].CLK
i_Clock => \double_dabble:bcd[2].CLK
i_Clock => \double_dabble:bcd[3].CLK
i_Clock => \double_dabble:bcd[4].CLK
i_Clock => \double_dabble:bcd[5].CLK
i_Clock => \double_dabble:bcd[6].CLK
i_Clock => \double_dabble:bcd[7].CLK
i_Clock => \double_dabble:bcd[8].CLK
i_Clock => \double_dabble:bcd[9].CLK
i_Clock => \double_dabble:bcd[10].CLK
i_Clock => \double_dabble:bcd[11].CLK
i_Clock => \double_dabble:temp[0].CLK
i_Clock => \double_dabble:temp[1].CLK
i_Clock => \double_dabble:temp[2].CLK
i_Clock => \double_dabble:temp[3].CLK
i_Clock => \double_dabble:temp[4].CLK
i_Clock => \double_dabble:temp[5].CLK
i_Clock => \double_dabble:temp[6].CLK
i_Clock => \double_dabble:temp[7].CLK
i_Clock => \double_dabble:temp[8].CLK
i_Clock => \double_dabble:temp[9].CLK
i_Clock => \double_dabble:temp[10].CLK
i_Clock => \double_dabble:temp[11].CLK
i_Clock => \double_dabble:temp[12].CLK
i_Clock => \double_dabble:temp[13].CLK
i_Clock => state~1.DATAIN
i_Reset_n => bcd_signal[0].ACLR
i_Reset_n => bcd_signal[1].ACLR
i_Reset_n => bcd_signal[2].ACLR
i_Reset_n => bcd_signal[3].ACLR
i_Reset_n => bcd_signal[4].ACLR
i_Reset_n => bcd_signal[5].ACLR
i_Reset_n => bcd_signal[6].ACLR
i_Reset_n => bcd_signal[7].ACLR
i_Reset_n => bcd_signal[8].ACLR
i_Reset_n => bcd_signal[9].ACLR
i_Reset_n => bcd_signal[10].ACLR
i_Reset_n => bcd_signal[11].ACLR
i_Reset_n => \double_dabble:bcd[0].ACLR
i_Reset_n => \double_dabble:bcd[1].ACLR
i_Reset_n => \double_dabble:bcd[2].ACLR
i_Reset_n => \double_dabble:bcd[3].ACLR
i_Reset_n => \double_dabble:bcd[4].ACLR
i_Reset_n => \double_dabble:bcd[5].ACLR
i_Reset_n => \double_dabble:bcd[6].ACLR
i_Reset_n => \double_dabble:bcd[7].ACLR
i_Reset_n => \double_dabble:bcd[8].ACLR
i_Reset_n => \double_dabble:bcd[9].ACLR
i_Reset_n => \double_dabble:bcd[10].ACLR
i_Reset_n => \double_dabble:bcd[11].ACLR
i_Reset_n => \double_dabble:temp[0].ACLR
i_Reset_n => \double_dabble:temp[1].ACLR
i_Reset_n => \double_dabble:temp[2].ACLR
i_Reset_n => \double_dabble:temp[3].ACLR
i_Reset_n => \double_dabble:temp[4].ACLR
i_Reset_n => \double_dabble:temp[5].ACLR
i_Reset_n => \double_dabble:temp[6].ACLR
i_Reset_n => \double_dabble:temp[7].ACLR
i_Reset_n => \double_dabble:temp[8].ACLR
i_Reset_n => \double_dabble:temp[9].ACLR
i_Reset_n => \double_dabble:temp[10].ACLR
i_Reset_n => \double_dabble:temp[11].ACLR
i_Reset_n => \double_dabble:temp[12].ACLR
i_Reset_n => \double_dabble:temp[13].ACLR
i_Reset_n => state~3.DATAIN
i_Binary[0] => temp.DATAB
i_Binary[1] => temp.DATAB
i_Binary[2] => temp.DATAB
i_Binary[3] => temp.DATAB
i_Binary[4] => temp.DATAB
i_Binary[5] => temp.DATAB
i_Binary[6] => temp.DATAB
i_Binary[7] => temp.DATAB
i_Binary[8] => temp.DATAB
i_Binary[9] => temp.DATAB
i_Binary[10] => temp.DATAB
i_Binary[11] => temp.DATAB
i_Binary[12] => temp.DATAB
i_Binary[13] => temp.DATAB
i_DV_n => Selector24.IN2
i_DV_n => state.DATAB
o_Ones[0] <= bcd_signal[0].DB_MAX_OUTPUT_PORT_TYPE
o_Ones[1] <= bcd_signal[1].DB_MAX_OUTPUT_PORT_TYPE
o_Ones[2] <= bcd_signal[2].DB_MAX_OUTPUT_PORT_TYPE
o_Ones[3] <= bcd_signal[3].DB_MAX_OUTPUT_PORT_TYPE
o_Tens[0] <= bcd_signal[4].DB_MAX_OUTPUT_PORT_TYPE
o_Tens[1] <= bcd_signal[5].DB_MAX_OUTPUT_PORT_TYPE
o_Tens[2] <= bcd_signal[6].DB_MAX_OUTPUT_PORT_TYPE
o_Tens[3] <= bcd_signal[7].DB_MAX_OUTPUT_PORT_TYPE
o_Hundreds[0] <= bcd_signal[8].DB_MAX_OUTPUT_PORT_TYPE
o_Hundreds[1] <= bcd_signal[9].DB_MAX_OUTPUT_PORT_TYPE
o_Hundreds[2] <= bcd_signal[10].DB_MAX_OUTPUT_PORT_TYPE
o_Hundreds[3] <= bcd_signal[11].DB_MAX_OUTPUT_PORT_TYPE
o_DV_n <= o_DV_n.DB_MAX_OUTPUT_PORT_TYPE


|TopLevelModule|seven_seg_dispayer:inst_seven_seg_dispayer
i_Clock => input_buzzer~reg0.CLK
i_Clock => LED1~reg0.CLK
i_Clock => o_Sev_seg_3[0]~reg0.CLK
i_Clock => o_Sev_seg_3[1]~reg0.CLK
i_Clock => o_Sev_seg_3[2]~reg0.CLK
i_Clock => o_Sev_seg_3[3]~reg0.CLK
i_Clock => o_Sev_seg_3[4]~reg0.CLK
i_Clock => o_Sev_seg_3[5]~reg0.CLK
i_Clock => o_Sev_seg_3[6]~reg0.CLK
i_Clock => o_Sev_seg_2[0]~reg0.CLK
i_Clock => o_Sev_seg_2[1]~reg0.CLK
i_Clock => o_Sev_seg_2[2]~reg0.CLK
i_Clock => o_Sev_seg_2[3]~reg0.CLK
i_Clock => o_Sev_seg_2[4]~reg0.CLK
i_Clock => o_Sev_seg_2[5]~reg0.CLK
i_Clock => o_Sev_seg_2[6]~reg0.CLK
i_Clock => o_Sev_seg_1[0]~reg0.CLK
i_Clock => o_Sev_seg_1[1]~reg0.CLK
i_Clock => o_Sev_seg_1[2]~reg0.CLK
i_Clock => o_Sev_seg_1[3]~reg0.CLK
i_Clock => o_Sev_seg_1[4]~reg0.CLK
i_Clock => o_Sev_seg_1[5]~reg0.CLK
i_Clock => o_Sev_seg_1[6]~reg0.CLK
i_Clock => sev_seg_3[0].CLK
i_Clock => sev_seg_3[1].CLK
i_Clock => sev_seg_3[2].CLK
i_Clock => sev_seg_3[3].CLK
i_Clock => sev_seg_3[4].CLK
i_Clock => sev_seg_3[5].CLK
i_Clock => sev_seg_3[6].CLK
i_Clock => sev_seg_2[0].CLK
i_Clock => sev_seg_2[1].CLK
i_Clock => sev_seg_2[2].CLK
i_Clock => sev_seg_2[3].CLK
i_Clock => sev_seg_2[4].CLK
i_Clock => sev_seg_2[5].CLK
i_Clock => sev_seg_2[6].CLK
i_Clock => sev_seg_1[0].CLK
i_Clock => sev_seg_1[1].CLK
i_Clock => sev_seg_1[2].CLK
i_Clock => sev_seg_1[3].CLK
i_Clock => sev_seg_1[4].CLK
i_Clock => sev_seg_1[5].CLK
i_Clock => sev_seg_1[6].CLK
i_Clock => state~1.DATAIN
i_Reset_n => o_Sev_seg_3[0]~reg0.ACLR
i_Reset_n => o_Sev_seg_3[1]~reg0.ACLR
i_Reset_n => o_Sev_seg_3[2]~reg0.ACLR
i_Reset_n => o_Sev_seg_3[3]~reg0.ACLR
i_Reset_n => o_Sev_seg_3[4]~reg0.ACLR
i_Reset_n => o_Sev_seg_3[5]~reg0.ACLR
i_Reset_n => o_Sev_seg_3[6]~reg0.ACLR
i_Reset_n => o_Sev_seg_2[0]~reg0.ACLR
i_Reset_n => o_Sev_seg_2[1]~reg0.ACLR
i_Reset_n => o_Sev_seg_2[2]~reg0.ACLR
i_Reset_n => o_Sev_seg_2[3]~reg0.ACLR
i_Reset_n => o_Sev_seg_2[4]~reg0.ACLR
i_Reset_n => o_Sev_seg_2[5]~reg0.ACLR
i_Reset_n => o_Sev_seg_2[6]~reg0.ACLR
i_Reset_n => o_Sev_seg_1[0]~reg0.ACLR
i_Reset_n => o_Sev_seg_1[1]~reg0.ACLR
i_Reset_n => o_Sev_seg_1[2]~reg0.ACLR
i_Reset_n => o_Sev_seg_1[3]~reg0.ACLR
i_Reset_n => o_Sev_seg_1[4]~reg0.ACLR
i_Reset_n => o_Sev_seg_1[5]~reg0.ACLR
i_Reset_n => o_Sev_seg_1[6]~reg0.ACLR
i_Reset_n => sev_seg_3[0].ACLR
i_Reset_n => sev_seg_3[1].ACLR
i_Reset_n => sev_seg_3[2].ACLR
i_Reset_n => sev_seg_3[3].ACLR
i_Reset_n => sev_seg_3[4].ACLR
i_Reset_n => sev_seg_3[5].ACLR
i_Reset_n => sev_seg_3[6].ACLR
i_Reset_n => sev_seg_2[0].ACLR
i_Reset_n => sev_seg_2[1].ACLR
i_Reset_n => sev_seg_2[2].ACLR
i_Reset_n => sev_seg_2[3].ACLR
i_Reset_n => sev_seg_2[4].ACLR
i_Reset_n => sev_seg_2[5].ACLR
i_Reset_n => sev_seg_2[6].ACLR
i_Reset_n => sev_seg_1[0].ACLR
i_Reset_n => sev_seg_1[1].ACLR
i_Reset_n => sev_seg_1[2].ACLR
i_Reset_n => sev_seg_1[3].ACLR
i_Reset_n => sev_seg_1[4].ACLR
i_Reset_n => sev_seg_1[5].ACLR
i_Reset_n => sev_seg_1[6].ACLR
i_Reset_n => state~3.DATAIN
i_Reset_n => input_buzzer~reg0.ENA
i_Reset_n => LED1~reg0.ENA
i_Sev_seg_1[0] => Mux0.IN19
i_Sev_seg_1[0] => Mux1.IN19
i_Sev_seg_1[0] => Mux2.IN19
i_Sev_seg_1[0] => Mux3.IN19
i_Sev_seg_1[0] => Mux4.IN19
i_Sev_seg_1[0] => Mux5.IN19
i_Sev_seg_1[0] => Mux6.IN19
i_Sev_seg_1[1] => Mux0.IN18
i_Sev_seg_1[1] => Mux1.IN18
i_Sev_seg_1[1] => Mux2.IN18
i_Sev_seg_1[1] => Mux3.IN18
i_Sev_seg_1[1] => Mux4.IN18
i_Sev_seg_1[1] => Mux5.IN18
i_Sev_seg_1[1] => Mux6.IN18
i_Sev_seg_1[2] => Mux0.IN17
i_Sev_seg_1[2] => Mux1.IN17
i_Sev_seg_1[2] => Mux2.IN17
i_Sev_seg_1[2] => Mux3.IN17
i_Sev_seg_1[2] => Mux4.IN17
i_Sev_seg_1[2] => Mux5.IN17
i_Sev_seg_1[2] => Mux6.IN17
i_Sev_seg_1[3] => Mux0.IN16
i_Sev_seg_1[3] => Mux1.IN16
i_Sev_seg_1[3] => Mux2.IN16
i_Sev_seg_1[3] => Mux3.IN16
i_Sev_seg_1[3] => Mux4.IN16
i_Sev_seg_1[3] => Mux5.IN16
i_Sev_seg_1[3] => Mux6.IN16
i_Sev_seg_2[0] => Mux7.IN19
i_Sev_seg_2[0] => Mux8.IN19
i_Sev_seg_2[0] => Mux9.IN19
i_Sev_seg_2[0] => Mux10.IN19
i_Sev_seg_2[0] => Mux11.IN19
i_Sev_seg_2[0] => Mux12.IN19
i_Sev_seg_2[0] => Mux13.IN19
i_Sev_seg_2[1] => Mux7.IN18
i_Sev_seg_2[1] => Mux8.IN18
i_Sev_seg_2[1] => Mux9.IN18
i_Sev_seg_2[1] => Mux10.IN18
i_Sev_seg_2[1] => Mux11.IN18
i_Sev_seg_2[1] => Mux12.IN18
i_Sev_seg_2[1] => Mux13.IN18
i_Sev_seg_2[2] => Mux7.IN17
i_Sev_seg_2[2] => Mux8.IN17
i_Sev_seg_2[2] => Mux9.IN17
i_Sev_seg_2[2] => Mux10.IN17
i_Sev_seg_2[2] => Mux11.IN17
i_Sev_seg_2[2] => Mux12.IN17
i_Sev_seg_2[2] => Mux13.IN17
i_Sev_seg_2[3] => Mux7.IN16
i_Sev_seg_2[3] => Mux8.IN16
i_Sev_seg_2[3] => Mux9.IN16
i_Sev_seg_2[3] => Mux10.IN16
i_Sev_seg_2[3] => Mux11.IN16
i_Sev_seg_2[3] => Mux12.IN16
i_Sev_seg_2[3] => Mux13.IN16
i_Sev_seg_3[0] => Mux14.IN19
i_Sev_seg_3[0] => Mux15.IN19
i_Sev_seg_3[0] => Mux16.IN19
i_Sev_seg_3[0] => Mux17.IN19
i_Sev_seg_3[0] => Mux18.IN19
i_Sev_seg_3[0] => Mux19.IN19
i_Sev_seg_3[0] => Mux20.IN19
i_Sev_seg_3[1] => Mux14.IN18
i_Sev_seg_3[1] => Mux15.IN18
i_Sev_seg_3[1] => Mux16.IN18
i_Sev_seg_3[1] => Mux17.IN18
i_Sev_seg_3[1] => Mux18.IN18
i_Sev_seg_3[1] => Mux19.IN18
i_Sev_seg_3[1] => Mux20.IN18
i_Sev_seg_3[2] => Mux14.IN17
i_Sev_seg_3[2] => Mux15.IN17
i_Sev_seg_3[2] => Mux16.IN17
i_Sev_seg_3[2] => Mux17.IN17
i_Sev_seg_3[2] => Mux18.IN17
i_Sev_seg_3[2] => Mux19.IN17
i_Sev_seg_3[2] => Mux20.IN17
i_Sev_seg_3[3] => Mux14.IN16
i_Sev_seg_3[3] => Mux15.IN16
i_Sev_seg_3[3] => Mux16.IN16
i_Sev_seg_3[3] => Mux17.IN16
i_Sev_seg_3[3] => Mux18.IN16
i_Sev_seg_3[3] => Mux19.IN16
i_Sev_seg_3[3] => Mux20.IN16
i_Dv_n => Selector0.IN2
i_Dv_n => state.DATAA
i_Dv_n => Selector0.IN1
i_Dv_n => Selector1.IN1
o_Sev_seg_1[0] <= o_Sev_seg_1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Sev_seg_1[1] <= o_Sev_seg_1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Sev_seg_1[2] <= o_Sev_seg_1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Sev_seg_1[3] <= o_Sev_seg_1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Sev_seg_1[4] <= o_Sev_seg_1[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Sev_seg_1[5] <= o_Sev_seg_1[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Sev_seg_1[6] <= o_Sev_seg_1[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Sev_seg_2[0] <= o_Sev_seg_2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Sev_seg_2[1] <= o_Sev_seg_2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Sev_seg_2[2] <= o_Sev_seg_2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Sev_seg_2[3] <= o_Sev_seg_2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Sev_seg_2[4] <= o_Sev_seg_2[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Sev_seg_2[5] <= o_Sev_seg_2[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Sev_seg_2[6] <= o_Sev_seg_2[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Sev_seg_3[0] <= o_Sev_seg_3[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Sev_seg_3[1] <= o_Sev_seg_3[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Sev_seg_3[2] <= o_Sev_seg_3[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Sev_seg_3[3] <= o_Sev_seg_3[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Sev_seg_3[4] <= o_Sev_seg_3[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Sev_seg_3[5] <= o_Sev_seg_3[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
o_Sev_seg_3[6] <= o_Sev_seg_3[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED1 <= LED1~reg0.DB_MAX_OUTPUT_PORT_TYPE
selection => LED1.OUTPUTSELECT
selection => input_buzzer.OUTPUTSELECT
input_buzzer <= input_buzzer~reg0.DB_MAX_OUTPUT_PORT_TYPE


|TopLevelModule|buzzer:inst_buzzer
clk_50 => waveform_reg.CLK
clk_50 => counter_reg[0].CLK
clk_50 => counter_reg[1].CLK
clk_50 => counter_reg[2].CLK
clk_50 => counter_reg[3].CLK
clk_50 => counter_reg[4].CLK
clk_50 => counter_reg[5].CLK
clk_50 => counter_reg[6].CLK
clk_50 => counter_reg[7].CLK
clk_50 => counter_reg[8].CLK
clk_50 => counter_reg[9].CLK
clk_50 => counter_reg[10].CLK
clk_50 => counter_reg[11].CLK
clk_50 => counter_reg[12].CLK
clk_50 => counter_reg[13].CLK
clk_50 => counter_reg[14].CLK
clk_50 => counter_reg[15].CLK
reset => waveform_reg.ACLR
reset => counter_reg[0].ACLR
reset => counter_reg[1].ACLR
reset => counter_reg[2].ACLR
reset => counter_reg[3].ACLR
reset => counter_reg[4].ACLR
reset => counter_reg[5].ACLR
reset => counter_reg[6].ACLR
reset => counter_reg[7].ACLR
reset => counter_reg[8].ACLR
reset => counter_reg[9].ACLR
reset => counter_reg[10].ACLR
reset => counter_reg[11].ACLR
reset => counter_reg[12].ACLR
reset => counter_reg[13].ACLR
reset => counter_reg[14].ACLR
reset => counter_reg[15].ACLR
hilo => flip_tick.IN1
hilo => flip_tick.IN1
input => waveform_next.IN1
waveform <= waveform_reg.DB_MAX_OUTPUT_PORT_TYPE


